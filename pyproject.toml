[tool.black]
diff = true
color = true

[tool.django-stubs]
django_settings_module = "chronicle.settings"

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = ["asgiref.*"]
ignore_errors = true

[tool.pylint.main]
# Discover python modules and packages in the file system subtree.
recursive = true

[tool.pylint.format]
# Maximum number of characters on a single line. 88 is black's default.
max-line-length = 88

[tool.pylint.logging]
# The type of string formatting that logging methods do. `old` means using %
# formatting, `new` is for `{}` formatting.
logging-format-style = "new"

[tool.pylint."messages control"]
# Disable the message, report, category or checker with the given id(s). You can
# either give multiple identifiers separated by comma (,) or put this option
# multiple times (only on the command line, not in the configuration file where
# it should appear only once). You can also use "--disable=all" to disable
# everything first and then re-enable specific checks. For example, if you want
# to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
]
# Warn about unused disable comments in code
enable = ["useless-suppression"]

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.string]
# This flag controls whether inconsistent-quotes generates a warning when the
# character used as a quote delimiter is used inconsistently within a module.
check-quote-consistency = true

[tool.pylint.typecheck]
# Tells whether missing members accessed in mixin class should be ignored. A
# class is considered mixin if its name matches the mixin-class-rgx option.
# Tells whether to warn about missing members when the owner of the attribute is
# inferred to be None.
ignore-none = false

[tool.pylint.variables]
# Tells whether we should check for unused import in __init__ files.
init-import = true
