name: Test & Publish
on: push
permissions:
  contents: read

jobs:
  lint:
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install Pipenv
        run: python -m pip install --upgrade pipenv
      - name: Install Python dependencies
        run: pipenv sync --categories=linters
      - name: Install Node dependencies
        run: npm ci
      - name: Run linters
        run: pipenv run ./lint.sh

  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11' ]
    name: 'Unit tests - Python ${{ matrix.python-version }}'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pipenv'
      - name: Install Pipenv
        run: python -m pip install --upgrade pipenv
      - name: Install Python dependencies
        run: pipenv sync --categories=packages,tests
      - name: Run tests
        run: pipenv run coverage run
      - name: Show test coverage
        run: pipenv run coverage report

  upload:
    name: Mirror and Upload
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pipenv'
      - name: Install Pipenv
        run: python -m pip install --upgrade pipenv
      - name: Install Python dependencies
        run: pipenv sync --categories=packages
      - name: Create static mirror
        run: pipenv run ./mirror.sh ./mirrored/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './mirrored/'

  publish:
    name: Publish
    needs: upload
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v2
